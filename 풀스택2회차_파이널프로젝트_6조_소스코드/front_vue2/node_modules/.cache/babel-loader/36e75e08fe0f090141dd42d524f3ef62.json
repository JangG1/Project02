{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"storage-ts-container mb-5\"\n};\nconst _hoisted_2 = {\n  class: \"storage-ts-output-cont\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"display\": \"flex\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_4 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"margin-right\": \"1rem\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h4\", null, \"음성변환\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  class: \"remove-btn\"\n};\nconst _hoisted_7 = {\n  class: \"storage-img-box\"\n};\nconst _hoisted_8 = {\n  class: \"img-fit\",\n  controls: \"\",\n  ref: \"player\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  name: \"result\"\n};\nconst _hoisted_11 = [\"innerHTML\"];\nconst _hoisted_12 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", null, [_createElementVNode(\"h4\", null, _toDisplayString($props.trans_date), 1\n  /* TEXT */\n  )])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.remove())\n  }, \"삭제\")])]), _createCommentVNode(\"여기까지 복사해서 붙여넣기\"), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"audio\", _hoisted_8, [_createElementVNode(\"source\", {\n    src: $props.output\n  }, null, 8\n  /* PROPS */\n  , _hoisted_9)], 512\n  /* NEED_PATCH */\n  ), [[_vShow, $data.showOutput]]), _withDirectives(_createElementVNode(\"output\", _hoisted_10, [_createElementVNode(\"div\", {\n    innerHTML: $options.content\n  }, null, 8\n  /* PROPS */\n  , _hoisted_11)], 512\n  /* NEED_PATCH */\n  ), [[_vShow, $data.showInput]])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.changeShow()),\n    class: \"storage-ff1-btn mt-4\"\n  }, _toDisplayString($options.text), 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.download()),\n    class: \"storage-ff2-btn mt-4\"\n  }, \" 다운로드 \")])]), _createCommentVNode(\"storage-ts-output-cont-end\")]), _createCommentVNode(\"storage-ts-container-end\")], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;AACJC,OAAsD,EAAtD;AAAA;AAAA;AAAA;;;AACEA,OAAsB,EAAtB;AAAA;AAAA;;;gCACHC,oBAEM,KAFN,EAEM;AAFDD,OAA2B,EAA3B;AAAA;AAAA;AAEC,CAFN,EAAgC,cAC9BC,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAD8B,CAAhC;;AAAA;;;AAOGF,OAAK,EAAC;;;AAIRA,OAAK,EAAC;;;AACFA,OAAK,EAAC;AAAUG,UAAQ,EAAR;AAASC,KAAG,EAAC;;;;AAI5BC,MAAI,EAAC;;;;AAIVJ,OAAqB,EAArB;AAAA;AAAA;;;6DAxBTC,oBAkCM,KAlCN,cAkCM,CAjCJA,oBA+BM,KA/BN,cA+BM,CA9BJA,oBAYM,KAZN,cAYM,CAXJA,oBAOM,KAPN,cAOM,CANJI,UAMI,EAHJJ,oBAEM,KAFN,EAEM,IAFN,EAEM,CADJA,oBAAyB,IAAzB,EAAyB,IAAzB,EAAyBK,iBAAlBC,iBAAkB,CAAzB,EAAiB;AAAA;AAAjB,GACI,CAFN,CAGI,CAPN,CAWI,EAHJN,oBAEM,KAFN,cAEM,CADJA,oBAAqC,QAArC,EAAqC;AAA5BO,WAAK,sCAAEC,iBAAF;AAAuB,GAArC,EAA0B,IAA1B,CACI,CAFN,CAGI,CAZN,CA8BI,EAlBEC,qCAkBF,EAjBJT,oBAQM,KARN,cAQM,iBAPJA,oBAEQ,OAFR,cAEQ,CADNA,oBAAwB,QAAxB,EAAwB;AAAfU,OAAG,EAAEJ;AAAU,GAAxB,EAAoB,IAApB,EAAoB;AAAA;AAApB,IAAoBK,UAApB,CACM,CAFR;;AAAA,eAAqDC,mBAOjD,kBAHJZ,oBAES,QAFT,eAES,CADPA,oBAA4B,KAA5B,EAA4B;AAAvBa,aAAgB,EAARL;AAAe,GAA5B,EAAoB,IAApB,EAAoB;AAAA;AAApB,IAAoBM,WAApB,CACO,CAFT;;AAAA,eAA8BF,kBAG1B,CARN,CAiBI,EARJZ,oBAOM,KAPN,eAOM,CANJA,oBAES,QAFT,EAES;AAFAO,WAAK,sCAAEC,qBAAF,CAEL;AAFqBV,SAAK,EAAC;AAE3B,GAFT,mBACKU,cADL,EACS;AAAA;AADT,GAMI,EAHJR,oBAES,QAFT,EAES;AAFAO,WAAK,sCAAEC,mBAAF,CAEL;AAFmBV,SAAK,EAAC;AAEzB,GAFT,EAAyD,QAAzD,CAGI,CAPN,CAQI,CA/BN,CAiCI,EADJW,iDACI,CAlCN,GAmCAA","names":["class","style","_createElementVNode","controls","ref","name","_hoisted_5","_toDisplayString","$props","onClick","$options","_createCommentVNode","src","_hoisted_9","$data","innerHTML","_hoisted_11"],"sourceRoot":"","sources":["C:\\study_boot\\BCPR3\\front_vue2\\src\\components\\TTSStorageCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"storage-ts-container mb-5\">\r\n    <div class=\"storage-ts-output-cont\">\r\n      <div style=\"display: flex; justify-content: space-between;\">\r\n        <div style=\"display: flex;\">\r\n          <div style=\"margin-right: 1rem;\">\r\n            <h4>음성변환</h4>\r\n          </div>\r\n          <div>\r\n            <h4>{{ trans_date }}</h4>\r\n          </div>\r\n        </div>\r\n        <div class=\"remove-btn\">\r\n          <button @click=\"remove()\">삭제</button>\r\n        </div>\r\n      </div><!--여기까지 복사해서 붙여넣기-->\r\n      <div class=\"storage-img-box\">\r\n        <audio class=\"img-fit\" controls ref=\"player\" v-show=\"showOutput\">\r\n          <source :src=\"output\" />\r\n        </audio>\r\n\r\n        <output name=\"result\" v-show=\"showInput\">\r\n          <div v-html=\"content\"></div>\r\n        </output>\r\n      </div>\r\n      <div style=\"display: flex\">\r\n        <button @click=\"changeShow()\" class=\"storage-ff1-btn mt-4\">\r\n          {{ text }}\r\n        </button>\r\n        <button @click=\"download()\" class=\"storage-ff2-btn mt-4\">\r\n          다운로드\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <!--storage-ts-output-cont-end-->\r\n  </div>\r\n  <!--storage-ts-container-end-->\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"TTSStorageCard\",\r\n  props: {\r\n    voice_no: Number,\r\n    email: String,\r\n    kind: String,\r\n    input: String,\r\n    output: String,\r\n    trans_date: String,\r\n  },\r\n  data() {\r\n    return {\r\n      showInput: false,\r\n      showOutput: true,\r\n      btnText: \"텍스트 보기\",\r\n    };\r\n  },\r\n  methods: {\r\n    changeText(check) {\r\n      if (check) this.btnText = \"텍스트 보기\";\r\n      else this.btnText = \"오디오 보기\";\r\n    },\r\n    changeShow() {\r\n      if (this.showInput) {\r\n        this.showInput = false;\r\n      } else {\r\n        this.showInput = true;\r\n      }\r\n      if (this.showOutput) {\r\n        this.showOutput = false;\r\n      } else {\r\n        this.showOutput = true;\r\n      }\r\n      this.changeText(this.showOutput);\r\n    },\r\n    async remove() {\r\n      let str = \"/api/tts/remove\";\r\n      let form = new FormData();\r\n      form.append(\"email\", this.email);\r\n      form.append(\"voice_no\", this.voice_no);\r\n\r\n      await axios\r\n        .post(str, form)\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      this.$router.go(\"/storage\");\r\n    },\r\n    download() {\r\n      let str = \"/api/tts/download/\" + this.email + \"/\" + this.voice_no + \"/\";\r\n      if (this.showInput) str += \"input\";\r\n      else str += \"output\";\r\n\r\n      axios\r\n        .get(str, {\r\n          responseType: \"blob\",\r\n        })\r\n        .then((res) => {\r\n          const name = res.headers[\"content-disposition\"]\r\n            .split(\"fileName=\")[1]\r\n            .replace(/\"/g, \"\");\r\n          const url = window.URL.createObjectURL(new Blob([res.data]));\r\n          const link = document.createElement(\"a\");\r\n          link.href = url;\r\n          link.setAttribute(\"download\", name); //or any other extension document.body.appendChild(link); link.click();\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          link.remove();\r\n          console.log(res);\r\n          console.log(\"다운로드 성공\");\r\n        })\r\n        .catch((err) => {\r\n          err;\r\n          console.log(\"다운로드 실패\");\r\n        });\r\n    },\r\n  },\r\n  computed: {\r\n    content() {\r\n      return this.input.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n    },\r\n    text() {\r\n      return this.btnText;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.player {\r\n  width: 100%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}