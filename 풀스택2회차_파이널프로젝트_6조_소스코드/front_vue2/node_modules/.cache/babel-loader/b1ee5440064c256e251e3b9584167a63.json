{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"STTStorageCard\",\n  props: {\n    document_no: Number,\n    email: String,\n    kind: String,\n    input: String,\n    output: String,\n    trans_date: String\n  },\n\n  data() {\n    return {\n      showInput: true,\n      showOutput: false\n    };\n  },\n\n  methods: {\n    changeShow() {\n      if (this.showInput) this.showInput = false;else this.showInput = true;\n      if (this.showOutput) this.showOutput = false;else this.showOutput = true;\n    },\n\n    async remove() {\n      let str = \"/api/Stt/remove\";\n      let form = new FormData();\n      form.append(\"email\", this.email);\n      form.append(\"document_no\", this.document_no);\n      await axios.post(str, form).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.$router.go(\"/storage\");\n    },\n\n    download() {\n      let str = \"/api/Stt/download/\" + this.email + \"/\" + this.document_no + \"/\";\n      if (this.showInput) str += \"input\";else str += \"output\";\n      axios.get(str, {\n        responseType: \"blob\"\n      }).then(res => {\n        const name = res.headers[\"content-disposition\"].split(\"fileName=\")[1].replace(/\"/g, \"\");\n        const url = window.URL.createObjectURL(new Blob([res.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", name); //or any other extension document.body.appendChild(link); link.click();\n\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        console.log(res);\n        console.log(\"다운로드 성공\");\n      }).catch(err => {\n        err;\n        console.log(\"다운로드 실패\");\n      });\n    }\n\n  },\n  computed: {\n    content() {\n      return this.output.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4CA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;AACbC,MAAI,EAAE,gBADO;AAEbC,OAAK,EAAE;AACLC,eAAW,EAAEC,MADR;AAELC,SAAK,EAAEC,MAFF;AAGLC,QAAI,EAAED,MAHD;AAILE,SAAK,EAAEF,MAJF;AAKLG,UAAM,EAAEH,MALH;AAMLI,cAAU,EAAEJ;AANP,GAFM;;AAUbK,MAAI,GAAG;AACL,WAAO;AACLC,eAAS,EAAE,IADN;AAELC,gBAAU,EAAE;AAFP,KAAP;AAID,GAfY;;AAgBbC,SAAO,EAAE;AACPC,cAAU,GAAG;AACX,UAAI,KAAKH,SAAT,EAAoB,KAAKA,SAAL,GAAiB,KAAjB,CAApB,KACK,KAAKA,SAAL,GAAiB,IAAjB;AACL,UAAI,KAAKC,UAAT,EAAqB,KAAKA,UAAL,GAAkB,KAAlB,CAArB,KACK,KAAKA,UAAL,GAAkB,IAAlB;AACN,KANM;;AAOP,UAAMG,MAAN,GAAe;AACb,UAAIC,GAAE,GAAI,iBAAV;AACA,UAAIC,IAAG,GAAI,IAAIC,QAAJ,EAAX;AACAD,UAAI,CAACE,MAAL,CAAY,OAAZ,EAAqB,KAAKf,KAA1B;AACAa,UAAI,CAACE,MAAL,CAAY,aAAZ,EAA2B,KAAKjB,WAAhC;AAEA,YAAMH,KAAI,CACPqB,IADG,CACEJ,GADF,EACOC,IADP,EAEHI,IAFG,CAEGC,GAAD,IAAS;AACbC,eAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAJG,EAKHG,KALG,CAKIC,GAAD,IAAS;AACdH,eAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,OAPG,CAAN;AAQA,WAAKC,OAAL,CAAaC,EAAb,CAAgB,UAAhB;AACD,KAtBM;;AAuBPC,YAAQ,GAAG;AACT,UAAIb,GAAE,GACJ,uBAAuB,KAAKZ,KAA5B,GAAoC,GAApC,GAA0C,KAAKF,WAA/C,GAA6D,GAD/D;AAEA,UAAI,KAAKS,SAAT,EAAoBK,GAAE,IAAK,OAAP,CAApB,KACKA,GAAE,IAAK,QAAP;AAELjB,WAAI,CACD+B,GADH,CACOd,GADP,EACY;AACRe,oBAAY,EAAE;AADN,OADZ,EAIGV,IAJH,CAISC,GAAD,IAAS;AACb,cAAMtB,IAAG,GAAIsB,GAAG,CAACU,OAAJ,CAAY,qBAAZ,EACVC,KADU,CACJ,WADI,EACS,CADT,EAEVC,OAFU,CAEF,IAFE,EAEI,EAFJ,CAAb;AAGA,cAAMC,GAAE,GAAIC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACjB,GAAG,CAACZ,IAAL,CAAT,CAA3B,CAAZ;AACA,cAAM8B,IAAG,GAAIC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,YAAI,CAACG,IAAL,GAAYR,GAAZ;AACAK,YAAI,CAACI,YAAL,CAAkB,UAAlB,EAA8B5C,IAA9B,EAPa,CAOwB;;AACrCyC,gBAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;AACAA,YAAI,CAACO,KAAL;AACAP,YAAI,CAACzB,MAAL;AACAQ,eAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,eAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OAjBH,EAkBGC,KAlBH,CAkBUC,GAAD,IAAS;AACdA,WAAG;AACHH,eAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OArBH;AAsBD;;AAnDM,GAhBI;AAqEbwB,UAAQ,EAAE;AACRC,WAAO,GAAG;AACR,aAAO,KAAKzC,MAAL,CAAY0B,OAAZ,CAAoB,iBAApB,EAAuC,QAAvC,CAAP;AACD;;AAHO;AArEG,CAAf","names":["axios","name","props","document_no","Number","email","String","kind","input","output","trans_date","data","showInput","showOutput","methods","changeShow","remove","str","form","FormData","append","post","then","res","console","log","catch","err","$router","go","download","get","responseType","headers","split","replace","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","computed","content"],"sourceRoot":"","sources":["C:\\study_boot\\BCPR3\\front_vue2\\src\\components\\STTStorageCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"storage-ts-container mb-5\">\r\n    <div class=\"storage-ts-output-cont\">\r\n      <div style=\"display: flex; justify-content: space-between;\">\r\n        <div style=\"display: flex;\">\r\n          <div style=\"margin-right: 1rem;\">\r\n            <h4>매체번역</h4>\r\n          </div>\r\n          <div>\r\n            <h4>{{ trans_date }}</h4>\r\n          </div>\r\n        </div>\r\n        <div class=\"remove-btn\">\r\n          <button @click=\"remove()\">삭제</button>\r\n        </div>\r\n      </div><!--여기까지 복사해서 붙여넣기-->\r\n        <video class=\"img-fit\" controls ref=\"player\" v-show=\"showInput\">\r\n          <source :src=\"input\" />\r\n        </video>\r\n        <div style=\"display: none\">\r\n          <audio class=\"img-fit\" controls ref=\"player\">\r\n            <source :src=\"input\" />\r\n          </audio>\r\n        </div>\r\n\r\n        <output name=\"result\" v-show=\"showOutput\">\r\n          <div v-html=\"content\"></div>\r\n        </output>\r\n      \r\n      <div style=\"display: flex\">\r\n        <button @click=\"changeShow()\" class=\"storage-ff1-btn mt-4\">\r\n          텍스트 보기\r\n        </button>\r\n        <button @click=\"download()\" class=\"storage-ff2-btn mt-4\">\r\n          다운로드\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <!--storage-ts-output-cont-end-->\r\n  </div>\r\n  <!--storage-ts-container-end-->\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"STTStorageCard\",\r\n  props: {\r\n    document_no: Number,\r\n    email: String,\r\n    kind: String,\r\n    input: String,\r\n    output: String,\r\n    trans_date: String,\r\n  },\r\n  data() {\r\n    return {\r\n      showInput: true,\r\n      showOutput: false,\r\n    };\r\n  },\r\n  methods: {\r\n    changeShow() {\r\n      if (this.showInput) this.showInput = false;\r\n      else this.showInput = true;\r\n      if (this.showOutput) this.showOutput = false;\r\n      else this.showOutput = true;\r\n    },\r\n    async remove() {\r\n      let str = \"/api/Stt/remove\";\r\n      let form = new FormData();\r\n      form.append(\"email\", this.email);\r\n      form.append(\"document_no\", this.document_no);\r\n\r\n      await axios\r\n        .post(str, form)\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      this.$router.go(\"/storage\");\r\n    },\r\n    download() {\r\n      let str =\r\n        \"/api/Stt/download/\" + this.email + \"/\" + this.document_no + \"/\";\r\n      if (this.showInput) str += \"input\";\r\n      else str += \"output\";\r\n\r\n      axios\r\n        .get(str, {\r\n          responseType: \"blob\",\r\n        })\r\n        .then((res) => {\r\n          const name = res.headers[\"content-disposition\"]\r\n            .split(\"fileName=\")[1]\r\n            .replace(/\"/g, \"\");\r\n          const url = window.URL.createObjectURL(new Blob([res.data]));\r\n          const link = document.createElement(\"a\");\r\n          link.href = url;\r\n          link.setAttribute(\"download\", name); //or any other extension document.body.appendChild(link); link.click();\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          link.remove();\r\n          console.log(res);\r\n          console.log(\"다운로드 성공\");\r\n        })\r\n        .catch((err) => {\r\n          err;\r\n          console.log(\"다운로드 실패\");\r\n        });\r\n    },\r\n  },\r\n  computed: {\r\n    content() {\r\n      return this.output.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.player {\r\n  width: 100%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}