{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '@/assets/kakaoLogo.png';\nimport _imports_1 from '@/assets/googleLogo.png';\nconst _hoisted_1 = {\n  key: 0,\n  class: \"login-modal px-5 py-5\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"login-text my-4\"\n}, [/*#__PURE__*/_createElementVNode(\"h4\", null, \"로그인\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"loginBtns mt-5 mb-5\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1,\n  alt: \"\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"my-signin2\",\n  style: {\n    \"display\": \"none\"\n  }\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = {\n  class: \"closeBtn\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [$props.loginModal == true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.kakaoLogin && $options.kakaoLogin(...args)),\n    class: \"kakaoBtn mb-3\"\n  }, [_hoisted_4, _hoisted_5, _createCommentVNode(\" 카카오 아이디로 로그인 \")]), _createElementVNode(\"div\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.googleLogin && $options.googleLogin(...args)),\n    class: \"googleBtn\"\n  }, [_hoisted_6, _hoisted_7, _createCommentVNode(\" 구글 아이디로 로그인 \")]), _hoisted_8]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.$emit('closeModal'))\n  }, \"닫기\")])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"login-modal-end\")], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";OAOaA,gBAA4B;OAK5BC,gBAA6B;;;AAXnCC,OAAK,EAAC;;;gCACTC,oBAEM,KAFN,EAEM;AAFDD,OAAK,EAAC;AAEL,CAFN,EAA4B,cAC1BC,oBAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,CAD0B,CAA5B;;AAAA;;;AAGKD,OAAK,EAAC;;;gCAEPC,oBAA2C,KAA3C,EAA2C;AAAtCC,KAA4B,EAA5BJ,UAAsC;AAATK,KAAG,EAAC;AAAK,CAA3C;;AAAA;;gCACAF,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;gCAIAA,oBAA4C,KAA5C,EAA4C;AAAvCC,KAA6B,EAA7BH,UAAuC;AAATI,KAAG,EAAC;AAAK,CAA5C;;AAAA;;gCACAF,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;gCAGFA,oBAAiD,KAAjD,EAAiD;AAA5CG,IAAE,EAAC,YAAyC;AAA5BC,OAAqB,EAArB;AAAA;AAAA;AAA4B,CAAjD;;AAAA;;;AAEGL,OAAK,EAAC;;;6DAjB4BM,qBAAU,sBAAnDC,oBAoBM,KApBN,cAoBM,CAnBJC,UAmBI,EAhBJP,oBAYM,KAZN,cAYM,CAXJA,oBAIM,KAJN,EAIM;AAJAQ,WAAK,yCAAEC,mDAAF,CAIL;AAJmBV,SAAK,EAAC;AAIzB,GAJN,GACEW,YACAC,YACAC,sCAHF,CAWI,EANJZ,oBAIM,KAJN,EAIM;AAJAQ,WAAK,yCAAEC,qDAAF,CAIL;AAJoBV,SAAK,EAAC;AAI1B,GAJN,GACEc,YACAC,YACAF,qCAHF,CAMI,EADJG,UACI,CAZN,CAgBI,EAHJf,oBAEM,KAFN,cAEM,CADJA,oBAAgD,QAAhD,EAAgD;AAAvCQ,WAAK,sCAAEQ,WAAK,YAAL,CAAF;AAAkC,GAAhD,EAAqC,IAArC,CACI,CAFN,CAGI,CApBN,wCAqBAJ","names":["_imports_0","_imports_1","class","_createElementVNode","src","alt","id","style","$props","_createElementBlock","_hoisted_2","onClick","$options","_hoisted_4","_hoisted_5","_createCommentVNode","_hoisted_6","_hoisted_7","_hoisted_8","_ctx"],"sourceRoot":"","sources":["C:\\study_boot\\BCPR3\\front_vue2\\src\\components\\Modal.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-modal px-5 py-5\" v-if=\"loginModal == true\">\r\n    <div class=\"login-text my-4\">\r\n      <h4>로그인</h4>\r\n    </div>\r\n    <div class=\"loginBtns mt-5 mb-5\">\r\n      <div @click=\"kakaoLogin\" class=\"kakaoBtn mb-3\">\r\n        <img src=\"@/assets/kakaoLogo.png\" alt=\"\" />\r\n        <br />\r\n        <!-- 카카오 아이디로 로그인 -->\r\n      </div>\r\n      <div @click=\"googleLogin\" class=\"googleBtn\">\r\n        <img src=\"@/assets/googleLogo.png\" alt=\"\" />\r\n        <br />\r\n        <!-- 구글 아이디로 로그인 -->\r\n      </div>\r\n      <div id=\"my-signin2\" style=\"display: none\"></div>\r\n    </div>\r\n    <div class=\"closeBtn\">\r\n      <button @click=\"$emit('closeModal')\">닫기</button>\r\n    </div>\r\n  </div>\r\n  <!--login-modal-end-->\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"LoginModal\",\r\n  props: {\r\n    loginModal: Boolean,\r\n  },\r\n  methods: {\r\n    kakaoLogin() {\r\n      // console.log(window.Kakao);\r\n      window.Kakao.Auth.login({\r\n        scope: \"profile_image, account_email\",\r\n        success: this.kakaoInfo,\r\n      });\r\n    },\r\n    async kakaoInfo(authObj) {\r\n      console.log(authObj);\r\n      const userInfo = {\r\n        email: null,\r\n        profile: null,\r\n      };\r\n      await window.Kakao.API.request({\r\n        url: \"/v2/user/me\",\r\n        success: (res) => {\r\n          const kakao_account = res.kakao_account;\r\n          userInfo.email = kakao_account.email;\r\n          userInfo.profile = kakao_account.profile.thumbnail_image_url;\r\n\r\n          if (userInfo.email != null || userInfo.email != \"\") {\r\n            axios\r\n              .post(\"/api/user/save/normal\", JSON.stringify(userInfo), {\r\n                headers: { \"Content-Type\": `application/json` },\r\n              })\r\n              .then((res) => {\r\n                res;\r\n                console.log(\"가입성공\");\r\n              })\r\n              .catch((err) => {\r\n                err;\r\n                console.log(\"기존가입\");\r\n              });\r\n          }\r\n          alert(\"로그인 성공!\");\r\n        },\r\n        fail: (error) => {\r\n          this.$router.push(\"/errorPage\");\r\n          console.log(error);\r\n        },\r\n      });\r\n      let form = new FormData();\r\n      form.append(\"email\", userInfo.email);\r\n      form.append(\"password\", \"DMTT\");\r\n      this.$store.dispatch(\"getToken\", form);\r\n      this.$store.dispatch(\"setUserInfo\", userInfo);\r\n    },\r\n    kakaoLogout() {\r\n      // eslint-disable-next-line\r\n      if (!window.Kakao.Auth.getAccessToken()) {\r\n        console.log(\"Not logged in.\");\r\n        return;\r\n      }\r\n      window.Kakao.Auth.logout(function (response) {\r\n        alert(response + \"logout\");\r\n        window.location.href = \"/\";\r\n      });\r\n      localStorage.clear(); // 전체삭제\r\n    },\r\n    //구글 버튼\r\n    googleLogin() {\r\n      var self = this;\r\n      window.gapi.signin2.render(\"my-signin2\", {\r\n        scope: \"profile email\",\r\n        width: 240,\r\n        height: 50,\r\n        longtitle: true,\r\n        theme: \"dark\",\r\n        onsuccess: this.googleInfo,\r\n        onfailure: this.googleLogout,\r\n      });\r\n      setTimeout(function () {\r\n        if (!self.googleLoginCheck) {\r\n          const auth = window.gapi.auth2.getAuthInstance();\r\n          auth.isSignedIn.get();\r\n          document.querySelector(\".abcRioButton\").click();\r\n        }\r\n      }, 500);\r\n    },\r\n    //구글 로그인 이후 실행되는 콜백함수(성공)\r\n    async googleInfo(googleUser) {\r\n      //const user_join_type = \"g\"\r\n      const profile = googleUser.getBasicProfile();\r\n      const googleEmail = profile.getEmail();\r\n      const googleProfile = profile.getImageUrl();\r\n      let googleData = {};\r\n      googleData.email = googleEmail;\r\n      googleData.profile = googleProfile;\r\n      if (googleData.email != null || googleData.profile != \"\") {\r\n        await axios\r\n          .post(\"/api/user/save/normal\", JSON.stringify(googleData), {\r\n            headers: { \"Content-Type\": `application/json` },\r\n          })\r\n          .then((res) => {\r\n            res;\r\n            console.log(\"가입성공\");\r\n          })\r\n          .catch((err) => {\r\n            err;\r\n            console.log(\"가입에러\");\r\n          });\r\n      }\r\n      let form = new FormData();\r\n      form.append(\"email\", googleData.email);\r\n      form.append(\"password\", \"DMTT\");\r\n      this.$store.dispatch(\"getToken\", form);\r\n      this.$store.dispatch(\"setUserInfo\", googleData);\r\n    },\r\n    googleLogout() {\r\n      // eslint-disable-next-line\r\n      const auth = gapi.auth2.getAuthInstance();\r\n      auth.signOut().then(function () {\r\n        console.log(\"User signed out.\");\r\n      });\r\n      localStorage.clear();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.login-modal {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  width: 30%;\r\n  height: 50%;\r\n\r\n  text-align: center;\r\n  border-radius: 25px;\r\n  background-color: white;\r\n\r\n  color: black;\r\n  z-index: 8;\r\n  box-shadow: 2px 2px 10px lightgrey;\r\n}\r\n\r\n.loginBtns {\r\n  justify-content: center;\r\n}\r\n\r\n.loginBtns > div {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 80%;\r\n  padding: 20px;\r\n  border: 1px solid #dbdbdb;\r\n  border-radius: 10px;\r\n}\r\n\r\n.kakaoBtn > img {\r\n  width: 30%;\r\n}\r\n\r\n.googleBtn > img {\r\n  width: 30%;\r\n}\r\n\r\n.closeBtn > button {\r\n  width: 30%;\r\n  background: black;\r\n  border: 1px solid #dbdbdb;\r\n  border-radius: 10px;\r\n  padding: 1%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}