{"ast":null,"code":"// import $ from 'jquery'\nimport axios from \"axios\";\nexport default {\n  name: \"papagoPage\",\n\n  data() {\n    return {\n      input: \"\",\n      output: \"\",\n      from_language: \"ko\",\n      to_language: \"en\"\n    };\n  },\n\n  methods: {\n    async upload() {\n      console.log(this.output);\n\n      if (this.input != null && this.output != null && this.input !== \"\" && this.outpu !== \"\") {\n        let form = new FormData();\n        form.append(\"email\", this.$store.state.userInfo.email);\n        var date = new Date();\n        form.append(\"trans_date\", new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString());\n        form.append(\"input\", this.input);\n        form.append(\"output\", this.output);\n        await axios.post(\"/api/papago/upload\", form, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        }).then(res => {\n          console.log(res);\n        }).catch(err => {\n          console.log(\"refreshToken error : \", err.config);\n        });\n      }\n    },\n\n    async translation() {\n      let form = new FormData();\n      form.append(\"text\", this.input);\n      form.append(\"from_language\", this.from_language);\n      form.append(\"to_language\", this.to_language);\n\n      if (this.from_language == this.to_language) {\n        this.output = this.input;\n        return;\n      }\n\n      if (this.from_language == \"ja\" && this.to_language == \"es\") {\n        alert(\"잘못된 요청입니다.\");\n        this.output = this.input;\n        return;\n      }\n\n      if (this.from_language == \"zh-CN\" && this.to_language == \"es\") {\n        alert(\"잘못된 요청입니다.\");\n        this.output = this.input;\n        return;\n      }\n\n      if (this.from_language == \"zh-CN\" && this.to_language == \"de\") {\n        alert(\"잘못된 요청입니다.\");\n        this.output = this.input;\n        return;\n      }\n\n      if (this.from_language == \"de\" && this.to_language == \"ja\") {\n        alert(\"잘못된 요청입니다.\");\n        this.output = this.input;\n        return;\n      }\n\n      if (this.from_language == \"de\" && this.to_language == \"zh-CN\") {\n        alert(\"잘못된 요청입니다.\");\n        this.output = this.input;\n        return;\n      }\n\n      if (this.from_language == \"de\" && this.to_language == \"es\") {\n        alert(\"잘못된 요청입니다.\");\n        this.output = this.input;\n        return;\n      }\n\n      if (this.from_language == \"es\" && this.to_language == \"ja\") {\n        alert(\"잘못된 요청입니다.\");\n        this.output = this.input;\n        return;\n      }\n\n      if (this.from_language == \"es\" && this.to_language == \"zh-CN\") {\n        alert(\"잘못된 요청입니다.\");\n        this.output = this.input;\n        return;\n      }\n\n      if (this.from_language == \"es\" && this.to_language == \"de\") {\n        alert(\"잘못된 요청입니다.\");\n        this.output = this.input;\n        return;\n      }\n\n      await axios.post(\"/api/papago/json\", form, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.output = res.data;\n      }).catch(err => {\n        console.log(\"refreshToken error : \", err.config);\n      });\n    }\n\n  },\n  components: {},\n  computed: {\n    content() {\n      return this.output.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\n    },\n\n    isLogin() {\n      return this.$store.state.isLogin;\n    }\n\n  },\n\n  mounted() {}\n\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","input","output","from_language","to_language","methods","upload","console","log","outpu","form","FormData","append","$store","state","userInfo","email","date","Date","getTime","getTimezoneOffset","toISOString","post","headers","then","res","catch","err","config","translation","alert","components","computed","content","replace","isLogin","mounted"],"sourceRoot":"","sources":["C:\\study_boot\\BCPR3\\front_vue2\\src\\pages\\Papago.vue"],"sourcesContent":["<template>\r\n  <div class=\"field\">\r\n    <div class=\"top-container px-5 py-5\">\r\n      <div class=\"profile-logo\">\r\n        <div style=\"text-align: left\">\r\n          <h2>간단번역</h2>\r\n        </div>\r\n        <div>\r\n          <h2 @click=\"$router.push('/')\">PAGO BOOKS</h2>\r\n        </div>\r\n      </div>\r\n      <!--profile-logo-end-->\r\n    </div>\r\n    <!--top-container-end-->\r\n    <div class=\"papago-bottom-container px-5 pt-5 pb-2\">\r\n      <div class=\"ts-container\">\r\n        <div class=\"ts-input-cont\">\r\n          <div class=\"ts-lg-ch\">\r\n            <select\r\n              v-model=\"from_language\"\r\n              name=\"ts-lg\"\r\n              id=\"ts-lg1\"\r\n              onchange=\"categoryChange(this)\"\r\n            >\r\n              <option value=\"ko\">한국어</option>\r\n              <option value=\"en\">영어</option>\r\n              <option value=\"ja\">일본어</option>\r\n              <option value=\"zh-CN\">중국어</option>\r\n              <option value=\"de\">독일어</option>\r\n              <option value=\"es\">스페인어</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <textarea\r\n              v-model=\"input\"\r\n              class=\"ppg-ts-box\"\r\n              placeholder=\"번역할 내용을 입력하세요\"\r\n            ></textarea>\r\n          </div>\r\n          <div class=\"ppg-trans-btn mt-4\">\r\n            <button @click=\"translation\">번역하기</button>\r\n          </div>\r\n        </div>\r\n        <!--ts-input-cont-end-->\r\n\r\n        <div class=\"ts-output-cont\">\r\n          <div class=\"ts-lg-ch\">\r\n            <select v-model=\"to_language\" name=\"ts-lg\" id=\"ts-lg2\">\r\n              <option value=\"ko\">한국어</option>\r\n              <option value=\"en\">영어</option>\r\n              <option value=\"ja\">일본어</option>\r\n              <option value=\"zh-CN\">중국어</option>\r\n              <option value=\"de\">독일어</option>\r\n              <option value=\"es\">스페인어</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"ppg-ts-box\" style=\"margin-bottom: 30px\">\r\n            <form action=\"#\">\r\n              <output name=\"result\" for=\"text\">\r\n                <div v-html=\"content\"></div>\r\n              </output>\r\n            </form>\r\n          </div>\r\n          <div class=\"ppg-save-btn mt-4\">\r\n            <div v-show=\"isLogin\">\r\n              <div class=\"ppg-save-btn mt-4\">\r\n                <button @click=\"upload\">저장하기</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!--ts-output-cont-end-->\r\n      </div>\r\n      <!--ts-container-end-->\r\n\r\n      <br />\r\n\r\n      <div\r\n        style=\"\r\n          text-align: center;\r\n          font-weight: bold;\r\n          margin-top: 7px;\r\n          margin-bottom: 7px;\r\n        \"\r\n      >\r\n        <p>[ Tip : 로그인을 하시면 자료를 보관하고 내려받을 수 있습니다 ]</p>\r\n      </div>\r\n    </div>\r\n    <!--papago-bottom-container-end-->\r\n  </div>\r\n  <!--field_end-->\r\n\r\n  <div class=\"px-5\"><hr /></div>\r\n\r\n  <div class=\"footer container\">\r\n    <p class=\"mx-3\">파고북스 이용약관</p>\r\n    <p class=\"mx-3\">의견제안</p>\r\n    <p class=\"mx-3\">개인정보처리방침</p>\r\n    <p class=\"mx-3\">책임의 한계와 법적고지</p>\r\n    <p class=\"mx-3\">준수사항</p>\r\n  </div>\r\n  <!--login-modal-end-->\r\n</template>\r\n\r\n<script>\r\n// import $ from 'jquery'\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"papagoPage\",\r\n  data() {\r\n    return {\r\n      input: \"\",\r\n      output: \"\",\r\n      from_language: \"ko\",\r\n      to_language: \"en\",\r\n    };\r\n  },\r\n  methods: {\r\n    async upload() {\r\n      console.log(this.output);\r\n      if (\r\n        this.input != null &&\r\n        this.output != null &&\r\n        this.input !== \"\" &&\r\n        this.outpu !== \"\"\r\n      ) {\r\n        let form = new FormData();\r\n        form.append(\"email\", this.$store.state.userInfo.email);\r\n        var date = new Date();\r\n\r\n        form.append(\r\n          \"trans_date\",\r\n          new Date(\r\n            date.getTime() - date.getTimezoneOffset() * 60000\r\n          ).toISOString()\r\n        );\r\n        form.append(\"input\", this.input);\r\n        form.append(\"output\", this.output);\r\n\r\n        await axios\r\n          .post(\"/api/papago/upload\", form, {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"refreshToken error : \", err.config);\r\n          });\r\n      }\r\n    },\r\n    async translation() {\r\n      let form = new FormData();\r\n      form.append(\"text\", this.input);\r\n      form.append(\"from_language\", this.from_language);\r\n      form.append(\"to_language\", this.to_language);\r\n\r\n      if (this.from_language == this.to_language) {\r\n        this.output = this.input;\r\n        return;\r\n      }\r\n      if (this.from_language == \"ja\" && this.to_language == \"es\") {\r\n        alert(\"잘못된 요청입니다.\");\r\n        this.output = this.input;\r\n        return;\r\n      }\r\n\r\n      if (this.from_language == \"zh-CN\" && this.to_language == \"es\") {\r\n        alert(\"잘못된 요청입니다.\");\r\n        this.output = this.input;\r\n        return;\r\n      }\r\n      if (this.from_language == \"zh-CN\" && this.to_language == \"de\") {\r\n        alert(\"잘못된 요청입니다.\");\r\n        this.output = this.input;\r\n        return;\r\n      }\r\n      if (this.from_language == \"de\" && this.to_language == \"ja\") {\r\n        alert(\"잘못된 요청입니다.\");\r\n        this.output = this.input;\r\n        return;\r\n      }\r\n      if (this.from_language == \"de\" && this.to_language == \"zh-CN\") {\r\n        alert(\"잘못된 요청입니다.\");\r\n        this.output = this.input;\r\n        return;\r\n      }\r\n      if (this.from_language == \"de\" && this.to_language == \"es\") {\r\n        alert(\"잘못된 요청입니다.\");\r\n        this.output = this.input;\r\n        return;\r\n      }\r\n      if (this.from_language == \"es\" && this.to_language == \"ja\") {\r\n        alert(\"잘못된 요청입니다.\");\r\n        this.output = this.input;\r\n        return;\r\n      }\r\n      if (this.from_language == \"es\" && this.to_language == \"zh-CN\") {\r\n        alert(\"잘못된 요청입니다.\");\r\n        this.output = this.input;\r\n        return;\r\n      }\r\n      if (this.from_language == \"es\" && this.to_language == \"de\") {\r\n        alert(\"잘못된 요청입니다.\");\r\n        this.output = this.input;\r\n        return;\r\n      }\r\n\r\n      await axios\r\n        .post(\"/api/papago/json\", form, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          this.output = res.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"refreshToken error : \", err.config);\r\n        });\r\n    },\r\n  },\r\n  components: {},\r\n  computed: {\r\n    content() {\r\n      return this.output.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n    },\r\n    isLogin() {\r\n      return this.$store.state.isLogin;\r\n    },\r\n  },\r\n  mounted() {},\r\n};\r\n</script>\r\n\r\n<style>\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\ntextarea {\r\n  resize: none;\r\n}\r\n\r\n.profile-logo > div > h2 {\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n\r\n.bottom-container {\r\n  background: white;\r\n  border-radius: 100px 0px 0px 0px;\r\n}\r\n\r\n.papago-bottom-container {\r\n  background: white;\r\n  border-radius: 100px 0px 0px 0px;\r\n}\r\n\r\n.ts-container {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.top-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 2rem 4rem 2rem 4rem;\r\n  color: white;\r\n}\r\n\r\n.ts-lg-ch {\r\n  text-align: left;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.ts-lg-ch > select {\r\n  font-size: 1rem;\r\n  padding: 0.5rem;\r\n  border: 1px solid #dbdbdb;\r\n  border-radius: 10px;\r\n}\r\n\r\nselect:hover {\r\n  border-color: none;\r\n}\r\n\r\nselect:focus {\r\n  outline: none;\r\n}\r\n\r\n.ts-input-cont {\r\n  width: 35%;\r\n  height: 100%;\r\n  margin: 1rem;\r\n  padding: 2rem 3rem 2rem 3rem;\r\n  border: 1px solid #dbdbdb;\r\n  border-radius: 25px;\r\n  text-align: center;\r\n}\r\n\r\n.ppg-ts-box {\r\n  width: 100%;\r\n  height: 350px;\r\n  border: 1px solid #dbdbdb;\r\n  border-radius: 10px;\r\n  padding: 1rem;\r\n  text-align: left;\r\n}\r\n\r\n.ppg-trans-btn > button {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  background: #0d66ff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 10px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.ppg-save-btn > button {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  background: white;\r\n  color: #0d66ff;\r\n  border: 1px solid #0d66ff;\r\n  border-radius: 10px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.ts-output-cont {\r\n  width: 35%;\r\n  margin: 1rem;\r\n  padding: 2rem 3rem 2rem 3rem;\r\n  border: 1px solid #dbdbdb;\r\n  border-radius: 25px;\r\n}\r\n\r\n.output-record {\r\n  text-align: end;\r\n}\r\n\r\n.output-record > button {\r\n  text-align: center;\r\n  width: 20%;\r\n  padding: 1.25rem;\r\n  background: #0d66ff;\r\n  border-radius: 50px 0px 0px 0px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}