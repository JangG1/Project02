{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"LoginModal\",\n  props: {\n    loginModal: Boolean\n  },\n  methods: {\n    kakaoLogin() {\n      // console.log(window.Kakao);\n      window.Kakao.Auth.login({\n        scope: \"profile_image, account_email\",\n        success: this.kakaoInfo\n      });\n      this.$emit(\"closeModal\");\n    },\n\n    async kakaoInfo(authObj) {\n      console.log(authObj);\n      const userInfo = {\n        email: null,\n        profile: null\n      };\n      await window.Kakao.API.request({\n        url: \"/v2/user/me\",\n        success: res => {\n          const kakao_account = res.kakao_account;\n          userInfo.email = kakao_account.email;\n          userInfo.profile = kakao_account.profile.thumbnail_image_url;\n\n          if (userInfo.email != null || userInfo.email != \"\") {\n            axios.post(\"/api/user/save/normal\", JSON.stringify(userInfo), {\n              headers: {\n                \"Content-Type\": `application/json`\n              }\n            }).then(res => {\n              res;\n              console.log(\"가입성공\");\n            }).catch(err => {\n              err;\n              console.log(\"기존가입\");\n            });\n          }\n        },\n        fail: error => {\n          this.$router.push(\"/errorPage\");\n          console.log(error);\n        }\n      });\n      let form = new FormData();\n      form.append(\"email\", userInfo.email);\n      form.append(\"password\", \"DMTT\");\n      this.$store.dispatch(\"getToken\", form);\n      this.$store.dispatch(\"setUserInfo\", userInfo);\n    },\n\n    kakaoLogout() {\n      // eslint-disable-next-line\n      if (!window.Kakao.Auth.getAccessToken()) {\n        console.log(\"Not logged in.\");\n        return;\n      }\n\n      window.Kakao.Auth.logout(function (response) {\n        alert(response + \"logout\");\n        window.location.href = \"/\";\n      });\n      localStorage.clear(); // 전체삭제\n    },\n\n    //구글 버튼\n    googleLogin() {\n      var self = this;\n      window.gapi.signin2.render(\"my-signin2\", {\n        scope: \"profile email\",\n        width: 240,\n        height: 50,\n        longtitle: true,\n        theme: \"dark\",\n        onsuccess: this.googleInfo,\n        onfailure: this.googleLogout\n      });\n      setTimeout(function () {\n        if (!self.googleLoginCheck) {\n          const auth = window.gapi.auth2.getAuthInstance();\n          auth.isSignedIn.get();\n          const btn = document.querySelector(\".abcRioButton\");\n          if (btn != null) btn.click();\n        }\n      }, 100);\n    },\n\n    //구글 로그인 이후 실행되는 콜백함수(성공)\n    async googleInfo(googleUser) {\n      //const user_join_type = \"g\"\n      const profile = googleUser.getBasicProfile();\n      const googleEmail = profile.getEmail();\n      const googleProfile = profile.getImageUrl();\n      let googleData = {};\n      googleData.email = googleEmail;\n      googleData.profile = googleProfile;\n\n      if (googleData.email != null || googleData.profile != \"\") {\n        await axios.post(\"/api/user/save/normal\", JSON.stringify(googleData), {\n          headers: {\n            \"Content-Type\": `application/json`\n          }\n        }).then(res => {\n          res;\n          console.log(\"가입성공\");\n        }).catch(err => {\n          err;\n          console.log(\"가입에러\");\n        });\n      }\n\n      let form = new FormData();\n      form.append(\"email\", googleData.email);\n      form.append(\"password\", \"DMTT\");\n      this.$store.dispatch(\"getToken\", form);\n      this.$store.dispatch(\"setUserInfo\", googleData);\n      this.$emit(\"closeModal\");\n    },\n\n    googleLogout() {\n      // eslint-disable-next-line\n      const auth = gapi.auth2.getAuthInstance();\n      auth.signOut().then(function () {\n        console.log(\"User signed out.\");\n      });\n      localStorage.clear();\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","props","loginModal","Boolean","methods","kakaoLogin","window","Kakao","Auth","login","scope","success","kakaoInfo","$emit","authObj","console","log","userInfo","email","profile","API","request","url","res","kakao_account","thumbnail_image_url","post","JSON","stringify","headers","then","catch","err","fail","error","$router","push","form","FormData","append","$store","dispatch","kakaoLogout","getAccessToken","logout","response","alert","location","href","localStorage","clear","googleLogin","self","gapi","signin2","render","width","height","longtitle","theme","onsuccess","googleInfo","onfailure","googleLogout","setTimeout","googleLoginCheck","auth","auth2","getAuthInstance","isSignedIn","get","btn","document","querySelector","click","googleUser","getBasicProfile","googleEmail","getEmail","googleProfile","getImageUrl","googleData","signOut"],"sourceRoot":"","sources":["C:\\study_boot\\BCPR3\\front_vue2\\src\\components\\Modal.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-modal px-5 py-5\" v-if=\"loginModal\">\r\n    <div class=\"login-text my-4\">\r\n      <h4>로그인</h4>\r\n    </div>\r\n    <div class=\"loginBtns mt-5 mb-5\">\r\n      <div @click=\"kakaoLogin\" class=\"kakaoBtn mb-3\">\r\n        <img src=\"@/assets/kakaoLogo.png\" alt=\"\" />\r\n        <br />\r\n        <!-- 카카오 아이디로 로그인 -->\r\n      </div>\r\n      <div @click=\"googleLogin\" class=\"googleBtn\">\r\n        <img src=\"@/assets/googleLogo.png\" alt=\"\" />\r\n        <br />\r\n        <!-- 구글 아이디로 로그인 -->\r\n      </div>\r\n      <div id=\"my-signin2\" style=\"display: none\"></div>\r\n    </div>\r\n    <div class=\"closeBtn\">\r\n      <button @click=\"$emit('closeModal')\">닫기</button>\r\n    </div>\r\n  </div>\r\n  <!--login-modal-end-->\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"LoginModal\",\r\n  props: {\r\n    loginModal: Boolean,\r\n  },\r\n  methods: {\r\n    kakaoLogin() {\r\n      // console.log(window.Kakao);\r\n      window.Kakao.Auth.login({\r\n        scope: \"profile_image, account_email\",\r\n        success: this.kakaoInfo,\r\n      });\r\n      this.$emit(\"closeModal\");\r\n    },\r\n    async kakaoInfo(authObj) {\r\n      console.log(authObj);\r\n      const userInfo = {\r\n        email: null,\r\n        profile: null,\r\n      };\r\n      await window.Kakao.API.request({\r\n        url: \"/v2/user/me\",\r\n        success: (res) => {\r\n          const kakao_account = res.kakao_account;\r\n          userInfo.email = kakao_account.email;\r\n          userInfo.profile = kakao_account.profile.thumbnail_image_url;\r\n\r\n          if (userInfo.email != null || userInfo.email != \"\") {\r\n            axios\r\n              .post(\"/api/user/save/normal\", JSON.stringify(userInfo), {\r\n                headers: { \"Content-Type\": `application/json` },\r\n              })\r\n              .then((res) => {\r\n                res;\r\n                console.log(\"가입성공\");\r\n              })\r\n              .catch((err) => {\r\n                err;\r\n                console.log(\"기존가입\");\r\n              });\r\n          }\r\n        },\r\n        fail: (error) => {\r\n          this.$router.push(\"/errorPage\");\r\n          console.log(error);\r\n        },\r\n      });\r\n      let form = new FormData();\r\n      form.append(\"email\", userInfo.email);\r\n      form.append(\"password\", \"DMTT\");\r\n      this.$store.dispatch(\"getToken\", form);\r\n      this.$store.dispatch(\"setUserInfo\", userInfo);\r\n    },\r\n    kakaoLogout() {\r\n      // eslint-disable-next-line\r\n      if (!window.Kakao.Auth.getAccessToken()) {\r\n        console.log(\"Not logged in.\");\r\n        return;\r\n      }\r\n      window.Kakao.Auth.logout(function (response) {\r\n        alert(response + \"logout\");\r\n        window.location.href = \"/\";\r\n      });\r\n      localStorage.clear(); // 전체삭제\r\n    },\r\n    //구글 버튼\r\n    googleLogin() {\r\n      var self = this;\r\n      window.gapi.signin2.render(\"my-signin2\", {\r\n        scope: \"profile email\",\r\n        width: 240,\r\n        height: 50,\r\n        longtitle: true,\r\n        theme: \"dark\",\r\n        onsuccess: this.googleInfo,\r\n        onfailure: this.googleLogout,\r\n      });\r\n      setTimeout(function () {\r\n        if (!self.googleLoginCheck) {\r\n          const auth = window.gapi.auth2.getAuthInstance();\r\n          auth.isSignedIn.get();\r\n          const btn = document.querySelector(\".abcRioButton\");\r\n          if (btn != null) btn.click();\r\n        }\r\n      }, 100);\r\n    },\r\n    //구글 로그인 이후 실행되는 콜백함수(성공)\r\n    async googleInfo(googleUser) {\r\n      //const user_join_type = \"g\"\r\n      const profile = googleUser.getBasicProfile();\r\n      const googleEmail = profile.getEmail();\r\n      const googleProfile = profile.getImageUrl();\r\n      let googleData = {};\r\n      googleData.email = googleEmail;\r\n      googleData.profile = googleProfile;\r\n      if (googleData.email != null || googleData.profile != \"\") {\r\n        await axios\r\n          .post(\"/api/user/save/normal\", JSON.stringify(googleData), {\r\n            headers: { \"Content-Type\": `application/json` },\r\n          })\r\n          .then((res) => {\r\n            res;\r\n            console.log(\"가입성공\");\r\n          })\r\n          .catch((err) => {\r\n            err;\r\n            console.log(\"가입에러\");\r\n          });\r\n      }\r\n      let form = new FormData();\r\n      form.append(\"email\", googleData.email);\r\n      form.append(\"password\", \"DMTT\");\r\n      this.$store.dispatch(\"getToken\", form);\r\n      this.$store.dispatch(\"setUserInfo\", googleData);\r\n      this.$emit(\"closeModal\");\r\n    },\r\n    googleLogout() {\r\n      // eslint-disable-next-line\r\n      const auth = gapi.auth2.getAuthInstance();\r\n      auth.signOut().then(function () {\r\n        console.log(\"User signed out.\");\r\n      });\r\n      localStorage.clear();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.login-modal {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  width: 30%;\r\n  height: 50%;\r\n\r\n  text-align: center;\r\n  border-radius: 25px;\r\n  background-color: white;\r\n\r\n  color: black;\r\n  z-index: 8;\r\n  box-shadow: 2px 2px 10px lightgrey;\r\n}\r\n\r\n.loginBtns {\r\n  justify-content: center;\r\n}\r\n\r\n.loginBtns > div {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 80%;\r\n  padding: 20px;\r\n  border: 1px solid #dbdbdb;\r\n  border-radius: 10px;\r\n}\r\n\r\n.kakaoBtn > img {\r\n  width: 30%;\r\n}\r\n\r\n.googleBtn > img {\r\n  width: 30%;\r\n}\r\n\r\n.closeBtn > button {\r\n  width: 30%;\r\n  background: black;\r\n  border: 1px solid #dbdbdb;\r\n  border-radius: 10px;\r\n  padding: 1%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}